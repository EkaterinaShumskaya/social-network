{"version":3,"file":"static/js/137.5cbba233.chunk.js","mappings":"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","sources":["Components/common/Paginator/Paginator.tsx","webpack://samurai-way/./src/Components/users/User.module.css?a18a","Components/users/User.tsx","webpack://samurai-way/./src/Components/users/users.module.css?d659","Components/users/Users.tsx","redux/users-selectors.tsx","Components/users/UsersContainer.tsx"],"sourcesContent":["import React, {FC, useEffect} from \"react\";\r\nimport {TablePagination} from \"@material-ui/core\";\r\n\r\ntype PaginationPropsType = {\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    onPageChanged: (page: number, pageSize?: number) => void\r\n}\r\nexport const Paginator: FC<PaginationPropsType> = ({\r\n                                                       totalUsersCount,\r\n                                                       pageSize,\r\n                                                       onPageChanged,\r\n                                                       currentPage\r\n                                                   }) => {\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(pageSize);\r\n\r\n    useEffect(() => {\r\n        if (pageSize === rowsPerPage) return\r\n        setRowsPerPage(pageSize)\r\n    }, [pageSize])\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        debugger\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        onPageChanged(1, parseInt(event.target.value, 10))\r\n    };\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => {\r\n        onPageChanged(page + 1, rowsPerPage)\r\n\r\n    };\r\n    return (\r\n        <TablePagination\r\n            component=\"div\"\r\n            labelRowsPerPage=\"Users per page:\"\r\n            count={totalUsersCount}\r\n            page={currentPage - 1}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userCardContainer\":\"User_userCardContainer__DgHPo\",\"avatar\":\"User_avatar__euR0z\",\"userInfo\":\"User_userInfo__9uCMc\",\"userLocation\":\"User_userLocation__kFg4Q\",\"avatarAndButton\":\"User_avatarAndButton__hsE6i\",\"name\":\"User_name__v1hXW\"};","import s from \"./User.module.css\";\r\nimport userPhoto from \"../../aseets/image/user.png\";\r\nimport React, {FC} from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: number[],\r\n    followThunk: (id: number) => void,\r\n    unfollowThunk: (id: number) => void\r\n\r\n}\r\n\r\nexport const User: FC<PropsType> = ({\r\n                                        user,\r\n                                        followingInProgress,\r\n                                        unfollowThunk,\r\n                                        followThunk\r\n                                    }) => {\r\n\r\n\r\n    const setFollowHandler = () => {\r\n        followThunk(user.id)\r\n    }\r\n    const setUnfollowHandler = () => {\r\n        unfollowThunk(user.id)\r\n    }\r\n    const button = !user.followed\r\n        ? <Button size='small'\r\n                  variant='contained'\r\n                  color='primary'\r\n                  disabled={followingInProgress.some(id => id === user.id)}\r\n                  onClick={setFollowHandler}>\r\n            FOLLOW\r\n        </Button>\r\n        : <Button size='small'\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  disabled={followingInProgress.some(id => id === user.id)}\r\n                  onClick={setUnfollowHandler}>\r\n            UNFOLLOW\r\n        </Button>\r\n\r\n    return (\r\n        <div className={s.userCardContainer}>\r\n            <div className={s.avatarAndButton}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img className={s.avatar}\r\n                         alt={'avatar'}\r\n                         src={user.photos.large !== null ? user.photos.large : userPhoto}/>\r\n                </NavLink>\r\n                {button}\r\n            </div>\r\n            <div className={s.userInfo}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <div className={s.name}>{user.name}</div>\r\n                </NavLink>\r\n                <div>Status: {user.status}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__-Lt36\",\"usersContainer\":\"users_usersContainer__LGyYg\",\"sidebar\":\"users_sidebar__HwuIQ\",\"usersCards\":\"users_usersCards__J4orJ\"};","import React, {FC} from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport s from './users.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    users: UserType[],\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    onPageChanged: (page: number, pageSize?: number) => void\r\n    followingInProgress: number[],\r\n    followThunk: (id: number) => void,\r\n    unfollowThunk: (id: number) => void,\r\n\r\n}\r\n\r\nexport const Users: FC<PropsType> = ({\r\n                                         users,\r\n                                         pageSize,\r\n                                         totalUsersCount,\r\n                                         onPageChanged,\r\n                                         followThunk,\r\n                                         unfollowThunk,\r\n                                         followingInProgress,\r\n                                         currentPage\r\n                                     }) => {\r\n\r\n\r\n    return <div className='app-wrapper-content'>\r\n        <div className={s.usersContainer}>\r\n            <div className={s.sidebar}>\r\n            </div>\r\n            <div className={s.usersCards}>\r\n                <Paginator currentPage={currentPage}\r\n                           totalUsersCount={totalUsersCount}\r\n                           pageSize={pageSize}\r\n                           onPageChanged={onPageChanged}/>\r\n\r\n                {users.map(u => <User user={u}\r\n                                      followingInProgress={followingInProgress}\r\n                                      followThunk={followThunk}\r\n                                      unfollowThunk={unfollowThunk} key={u.id}\r\n                />)}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}","import {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.users.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users\r\n})\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.users.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.users.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.users.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.users.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.users.followingInProgress\r\n}","import {AppStateType} from \"../../redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {followThunk, requestUsersThunk, setCurrentPage, unfollowThunk, UserType} from \"../../redux/usersReducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[],\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: number[],\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    requestUsersThunk: (currentPage: number, pageSize: number) => void\r\n    followThunk: (id: number) => void,\r\n    unfollowThunk: (id: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsersThunk(currentPage, pageSize)\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber: number, pageSize: number = 10) => {\r\n        this.props.requestUsersThunk(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n\r\n            {/*{this.props.isFetching ? <Preloader/>*/}\r\n            {/*    : null}*/}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   followThunk={this.props.followThunk}\r\n                   unfollowThunk={this.props.unfollowThunk}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setCurrentPage,\r\n        requestUsersThunk,\r\n        followThunk,\r\n        unfollowThunk\r\n    }),\r\n)(UsersContainer)"],"names":["Paginator","totalUsersCount","pageSize","onPageChanged","currentPage","React","rowsPerPage","setRowsPerPage","useEffect","TablePagination","component","labelRowsPerPage","count","page","onPageChange","event","onRowsPerPageChange","parseInt","target","value","User","user","followingInProgress","unfollowThunk","followThunk","button","followed","Button","size","variant","color","disabled","some","id","onClick","className","s","to","alt","src","photos","large","userPhoto","name","status","Users","users","map","u","getUsers","createSelector","state","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","props","requestUsersThunk","this","compose","connect","setCurrentPage"],"sourceRoot":""}