{"version":3,"file":"static/js/781.0a53da29.chunk.js","mappings":"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","sources":["Components/common/Paginator/Paginator.tsx","webpack://samurai-way/./src/Components/users/users.module.css?d659","Components/users/User.tsx","Components/users/Users.tsx","redux/users-selectors.tsx","Components/users/UsersContainer.tsx"],"sourcesContent":["import React, {FC, useEffect} from \"react\";\r\nimport {TablePagination} from \"@material-ui/core\";\r\n\r\ntype PaginationPropsType = {\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    onPageChanged: (page: number, pageSize?: number) => void\r\n}\r\nexport const Paginator: FC<PaginationPropsType> = ({\r\n                                                       totalUsersCount,\r\n                                                       pageSize,\r\n                                                       onPageChanged,\r\n                                                       currentPage\r\n                                                   }) => {\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(pageSize);\r\n\r\n    useEffect(() => {\r\n        if (pageSize === rowsPerPage) return\r\n        setRowsPerPage(pageSize)\r\n    }, [pageSize])\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        debugger\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        onPageChanged(1, parseInt(event.target.value, 10))\r\n    };\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => {\r\n        onPageChanged(page + 1, rowsPerPage)\r\n\r\n    };\r\n    return (\r\n        <TablePagination\r\n            component=\"div\"\r\n            labelRowsPerPage=\"Users per page:\"\r\n            count={totalUsersCount}\r\n            page={currentPage-1}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__-Lt36\"};","import s from \"./users.module.css\";\r\nimport userPhoto from \"../../aseets/image/user.png\";\r\nimport React, {FC} from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: number[],\r\n    followThunk: (id: number) => void,\r\n    unfollowThunk: (id: number) => void\r\n\r\n}\r\n\r\nexport const User: FC<PropsType> = ({\r\n                                        user,\r\n                                        followingInProgress,\r\n                                        unfollowThunk,\r\n                                        followThunk\r\n                                    }) => {\r\n\r\n\r\n    return <div>\r\n<span>\r\n   <div>\r\n        <NavLink to={'/profile/' + user.id}>\r\n               <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={s.userPhoto}/>\r\n        </NavLink>\r\n\r\n    </div>\r\n</span>\r\n        <span>\r\n    {user.followed\r\n        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n            unfollowThunk(user.id)\r\n\r\n        }}>Unfollow</button>\r\n        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n            followThunk(user.id)\r\n        }}>Follow</button>\r\n    }\r\n</span>\r\n        <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n    </div>\r\n}\r\n\r\n","import React, {FC} from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\n\r\ntype PropsType = {\r\n    users: UserType[],\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    onPageChanged: (page: number, pageSize?: number) => void\r\n    followingInProgress: number[],\r\n    followThunk: (id: number) => void,\r\n    unfollowThunk: (id: number) => void,\r\n\r\n}\r\n\r\nexport const Users: FC<PropsType> = ({\r\n                                         users,\r\n                                         pageSize,\r\n                                         totalUsersCount,\r\n                                         onPageChanged,\r\n                                         followThunk,\r\n                                         unfollowThunk,\r\n                                         followingInProgress,\r\n                                         currentPage\r\n                                     }) => {\r\n\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n                   totalUsersCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}/>\r\n\r\n        <div>  {users.map(u => <User user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     followThunk={followThunk}\r\n                                     unfollowThunk={unfollowThunk} key={u.id}\r\n        />)}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}","import {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector=(state:AppStateType)=>{\r\n    return state.users.users\r\n}\r\n\r\nexport const getUsers=createSelector(getUsersSelector,(users)=>{\r\n    return users\r\n})\r\nexport const getPageSize=(state:AppStateType)=>{\r\n    return state.users.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount=(state:AppStateType)=>{\r\n    return state.users.totalUsersCount\r\n}\r\nexport const getCurrentPage=(state:AppStateType)=>{\r\n    return state.users.currentPage\r\n}\r\nexport const getIsFetching=(state:AppStateType)=>{\r\n    return state.users.isFetching\r\n}\r\nexport const getFollowingInProgress=(state:AppStateType)=>{\r\n    return state.users.followingInProgress\r\n}","import {AppStateType} from \"../../redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk, requestUsersThunk,\r\n    setCurrentPage,\r\n    unfollowThunk,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[],\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: number[],\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    requestUsersThunk: (currentPage: number, pageSize: number) => void\r\n    followThunk: (id: number) => void,\r\n    unfollowThunk: (id: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsersThunk(currentPage, pageSize)\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber: number, pageSize: number = 10) => {\r\n        this.props.requestUsersThunk(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n\r\n            {this.props.isFetching ? <Preloader/>\r\n                : null}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   followThunk={this.props.followThunk}\r\n                   unfollowThunk={this.props.unfollowThunk}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setCurrentPage,\r\n        requestUsersThunk,\r\n        followThunk,\r\n        unfollowThunk\r\n    }),\r\n)(UsersContainer)"],"names":["Paginator","totalUsersCount","pageSize","onPageChanged","currentPage","React","rowsPerPage","setRowsPerPage","useEffect","TablePagination","component","labelRowsPerPage","count","page","onPageChange","event","onRowsPerPageChange","parseInt","target","value","User","user","followingInProgress","unfollowThunk","followThunk","to","id","src","photos","small","userPhoto","className","s","followed","disabled","some","onClick","name","status","Users","users","map","u","getUsers","createSelector","state","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","props","requestUsersThunk","this","Preloader","compose","connect","setCurrentPage"],"sourceRoot":""}